<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.env">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env" />
              <option name="originalContent" value="# Vite environment variables&#10;# Make sure to restart the dev server after changing these&#10;VITE_API_BASE_URL=http://192.168.200.56:5000/api&#10;" />
              <option name="updatedContent" value="# Vite environment variables&#10;# Make sure to restart the dev server after changing these&#10;VITE_API_BASE_URL=http://192.168.200.56:5000/api&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.env.example">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.example" />
              <option name="originalContent" value="# Copy this file to .env and adjust values for your environment&#10;VITE_API_BASE_URL=http://localhost:5021/api&#10;" />
              <option name="updatedContent" value="# Copy this file to .env and adjust values for your environment&#10;VITE_API_BASE_URL=http://localhost:5021/api&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/api/attendanceApi.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/api/attendanceApi.ts" />
              <option name="originalContent" value="import axiosClient from &quot;./axiosClient&quot;;&#10;&#10;// New request shape for querying by employee&#10;export interface EmployeeAttendanceRequest {&#10;  employeeNo: string;&#10;  starttime: string; // ISO 8601 string&#10;  endtime: string;   // ISO 8601 string&#10;}&#10;&#10;const attendanceApi = {&#10;  getByPhongban: (phongBanId: number, pageNumber: number = 1, pageSize: number = 10) =&gt; {&#10;    return axiosClient.post(`/AcsEvent/attendance-by-phongban?pageNumber=${pageNumber}&amp;pageSize=${pageSize}`, phongBanId);&#10;  },&#10;  // New API: query attendance by employee number with time range (POST with body, optional pagination)&#10;  getByEmployee: (&#10;    employeeNo: string,&#10;    starttime: string | Date,&#10;    endtime: string | Date,&#10;    pageNumber?: number,&#10;    pageSize?: number&#10;  ) =&gt; {&#10;    const toIso = (d: string | Date) =&gt; (d instanceof Date ? d.toISOString() : new Date(d).toISOString());&#10;    const query =&#10;      pageNumber &amp;&amp; pageSize&#10;        ? `?pageNumber=${encodeURIComponent(pageNumber)}&amp;pageSize=${encodeURIComponent(pageSize)}`&#10;        : &quot;&quot;;&#10;    const body: EmployeeAttendanceRequest = {&#10;      employeeNo,&#10;      starttime: toIso(starttime),&#10;      endtime: toIso(endtime),&#10;    };&#10;    return axiosClient.post(`/AcsEvent/attendance-by-employee${query}`, body);&#10;  },&#10;  // Requested API: GET with query params employeeNo, starttime, endtime&#10;  getAttendanceByEmployeeIdAndDateRange: (&#10;    employeeNo: string,&#10;    starttime: string | Date,&#10;    endtime: string | Date&#10;  ) =&gt; {&#10;    const toIso = (d: string | Date) =&gt; (d instanceof Date ? d.toISOString() : new Date(d).toISOString());&#10;    return axiosClient.get(`/AcsEvent/GetAttendanceByEmployeeIdAndDateRange`, {&#10;      params: {&#10;        employeeNo,&#10;        starttime: toIso(starttime),&#10;        endtime: toIso(endtime),&#10;      },&#10;    });&#10;  },&#10;};&#10;export default attendanceApi;&#10;" />
              <option name="updatedContent" value="import axiosClient from &quot;./axiosClient&quot;;&#10;&#10;// New request shape for querying by employee&#10;export interface EmployeeAttendanceRequest {&#10;  employeeNo: string;&#10;  starttime: string; // ISO 8601 string&#10;  endtime: string;   // ISO 8601 string&#10;}&#10;&#10;const attendanceApi = {&#10;  getByPhongban: (phongBanId: number, pageNumber: number = 1, pageSize: number = 10) =&gt; {&#10;    return axiosClient.post(`/AcsEvent/attendance-by-phongban?pageNumber=${pageNumber}&amp;pageSize=${pageSize}`, phongBanId);&#10;  },&#10;  // New API: query attendance by employee number with time range (POST with body, optional pagination)&#10;  getByEmployee: (&#10;    employeeNo: string,&#10;    starttime: string | Date,&#10;    endtime: string | Date,&#10;    pageNumber?: number,&#10;    pageSize?: number&#10;  ) =&gt; {&#10;    const toIso = (d: string | Date) =&gt; (d instanceof Date ? d.toISOString() : new Date(d).toISOString());&#10;    const query =&#10;      pageNumber &amp;&amp; pageSize&#10;        ? `?pageNumber=${encodeURIComponent(pageNumber)}&amp;pageSize=${encodeURIComponent(pageSize)}`&#10;        : &quot;&quot;;&#10;    const body: EmployeeAttendanceRequest = {&#10;      employeeNo,&#10;      starttime: toIso(starttime),&#10;      endtime: toIso(endtime),&#10;    };&#10;    return axiosClient.post(`/AcsEvent/attendance-by-employee${query}`, body);&#10;  },&#10;  // Requested API: GET with query params employeeNo, starttime, endtime&#10;  getAttendanceByEmployeeIdAndDateRange: (&#10;    employeeNo: string,&#10;    starttime: string | Date,&#10;    endtime: string | Date&#10;  ) =&gt; {&#10;    const toIso = (d: string | Date) =&gt; (d instanceof Date ? d.toISOString() : new Date(d).toISOString());&#10;    return axiosClient.get(`/AcsEvent/GetAttendanceByEmployeeIdAndDateRange`, {&#10;      params: {&#10;        employeeNo,&#10;        starttime: toIso(starttime),&#10;        endtime: toIso(endtime),&#10;      },&#10;    });&#10;  },&#10;};&#10;export default attendanceApi;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/tables/BasicTables/BasicTableOne.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/tables/BasicTables/BasicTableOne.tsx" />
              <option name="originalContent" value="import {&#10;  Table,&#10;  TableBody,&#10;  TableCell,&#10;  TableHeader,&#10;  TableRow,&#10;} from &quot;../../ui/table&quot;;&#10;&#10;import { useEffect, useState } from &quot;react&quot;;&#10;import { AttendanceDto, AttendanceApiResponse } from &quot;../../../api/dtos&quot;;&#10;import attendanceApi from &quot;../../../api/attendanceApi&quot;;&#10;&#10;// Helper functions để kiểm tra thời gian&#10;const isLateCheckIn = (timeString: string): boolean =&gt; {&#10;  if (!timeString) return false;&#10;  const time = new Date(timeString);&#10;  const hours = time.getHours();&#10;  const minutes = time.getMinutes();&#10;  // Muộn nếu sau 7:30 (7 * 60 + 30 = 450 phút)&#10;  const timeInMinutes = hours * 60 + minutes;&#10;  return timeInMinutes &gt; 450; // 7:30 = 450 phút&#10;};&#10;&#10;const isEarlyCheckOut = (timeString: string): boolean =&gt; {&#10;  if (!timeString) return false;&#10;  const time = new Date(timeString);&#10;  const hours = time.getHours();&#10;  const minutes = time.getMinutes();&#10;  // Sớm nếu trước 16:30 (16 * 60 + 30 = 990 phút)&#10;  const timeInMinutes = hours * 60 + minutes;&#10;  return timeInMinutes &lt; 990; // 16:30 = 990 phút&#10;};&#10;&#10;// Define the table data using the interface&#10;&#10;interface BasicTableOneProps {&#10;  phongBanId?: number;&#10;  // Nếu truyền 3 props dưới đây thì component sẽ gọi API theo nhân viên + khoảng thời gian&#10;  employeeNo?: string;&#10;  startTime?: string | Date;&#10;  endTime?: string | Date;&#10;}&#10;&#10;export default function BasicTableOne({ phongBanId = 1, employeeNo, startTime, endTime }: BasicTableOneProps) {&#10;  const [attendanceData, setAttendanceData] = useState&lt;AttendanceDto[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [pageSize] = useState(50);&#10;  const [pagination, setPagination] = useState&lt;{&#10;    pageIndex: number;&#10;    pageSize: number;&#10;    totalPages: number;&#10;    totalRecords: number;&#10;  } | null&gt;(null);&#10;&#10;  const handlePageChange = (page: number) =&gt; {&#10;    setCurrentPage(page);&#10;  };&#10;&#10;  // Reset về trang 1 khi thay đổi filter (phòng ban / nhân viên / thời gian)&#10;  useEffect(() =&gt; {&#10;    setCurrentPage(1);&#10;  }, [phongBanId, employeeNo, startTime, endTime]);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchData = async () =&gt; {&#10;      try {&#10;        setLoading(true);&#10;        setError(null);&#10;&#10;        const useEmployeeQuery = !!employeeNo &amp;&amp; !!startTime &amp;&amp; !!endTime;&#10;&#10;        const response = useEmployeeQuery&#10;          ? await attendanceApi.getAttendanceByEmployeeIdAndDateRange(&#10;              employeeNo as string,&#10;              startTime as string | Date,&#10;              endTime as string | Date&#10;            )&#10;          : await attendanceApi.getByPhongban(phongBanId, currentPage, pageSize);&#10;&#10;        const respData: unknown = response.data;&#10;&#10;        // Trường hợp legacy: trả về trực tiếp mảng dữ liệu&#10;        if (Array.isArray(respData)) {&#10;          setPagination(null);&#10;          setAttendanceData(respData as AttendanceDto[]);&#10;          return;&#10;        }&#10;&#10;        // Trường hợp chuẩn có phân trang&#10;        const apiResp = respData as AttendanceApiResponse;&#10;        if (apiResp &amp;&amp; apiResp.succeeded &amp;&amp; Array.isArray(apiResp.data)) {&#10;          setPagination({&#10;            pageIndex: apiResp.pageIndex,&#10;            pageSize: apiResp.pageSize,&#10;            totalPages: apiResp.totalPages,&#10;            totalRecords: apiResp.totalRecords,&#10;          });&#10;          setAttendanceData(apiResp.data);&#10;        } else {&#10;          setAttendanceData([]);&#10;          setPagination(null);&#10;          setError(apiResp?.message || &quot;Dữ liệu không đúng định dạng&quot;);&#10;        }&#10;      } catch (error) {&#10;        setError(&#10;          `Không thể tải dữ liệu chấm công: ${&#10;            error instanceof Error ? error.message : &quot;Unknown error&quot;&#10;          }`&#10;        );&#10;        setAttendanceData([]);&#10;        setPagination(null);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    // Validate when using employee filters&#10;    if (employeeNo || startTime || endTime) {&#10;      if (!employeeNo || !startTime || !endTime) {&#10;        setError(&quot;Vui lòng cung cấp đủ employeeNo, startTime và endTime&quot;);&#10;        setAttendanceData([]);&#10;        setLoading(false);&#10;        return;&#10;      }&#10;      // Additional simple validation for dates&#10;      const s = new Date(startTime as string | Date);&#10;      const e = new Date(endTime as string | Date);&#10;      if (isNaN(s.getTime()) || isNaN(e.getTime()) || s &gt; e) {&#10;        setError(&quot;Khoảng thời gian không hợp lệ&quot;);&#10;        setAttendanceData([]);&#10;        setLoading(false);&#10;        return;&#10;      }&#10;    }&#10;&#10;    fetchData();&#10;  }, [phongBanId, employeeNo, startTime, endTime, currentPage, pageSize]);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;div className=&quot;animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;Đang tải dữ liệu...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;p className=&quot;text-red-500&quot;&gt;{error}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (attendanceData.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;p className=&quot;text-gray-500&quot;&gt;Không có dữ liệu chấm công&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;      &lt;div className=&quot;max-w-full overflow-x-auto&quot;&gt;&#10;        &lt;Table&gt;&#10;          {/* Table Header */}&#10;          &lt;TableHeader className=&quot;border-b border-gray-100 dark:border-white/[0.05]&quot;&gt;&#10;            &lt;TableRow&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-center text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                STT&#10;              &lt;/TableCell&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Mã nhân viên&#10;              &lt;/TableCell&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Họ và Tên&#10;              &lt;/TableCell&gt;&#10;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Giờ vào&#10;              &lt;/TableCell&gt;&#10;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Giờ ra&#10;              &lt;/TableCell&gt;&#10;            &lt;/TableRow&gt;&#10;          &lt;/TableHeader&gt;&#10;&#10;          {/* Table Body */}&#10;          &lt;TableBody className=&quot;divide-y divide-gray-100 dark:divide-white/[0.05]&quot;&gt;&#10;            {attendanceData.map((attendance, index) =&gt; (&#10;              &lt;TableRow key={`${attendance.manv}-${index}`}&gt;&#10;                &lt;TableCell&gt;&#10;                  &lt;span className=&quot;px-4 py-4 text-gray-500 text-center text-base dark:text-gray-400 font-medium&quot;&gt;&#10;                    {index + 1}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell&gt;&#10;                  &lt;span className=&quot;px-4 py-4 text-gray-500 text-start text-base dark:text-gray-400&quot;&gt;&#10;                    {attendance.manv}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell className=&quot;px-4 py-4 text-gray-500 text-start text-base dark:text-gray-400&quot;&gt;&#10;                  {attendance.name}&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell &#10;                  className={`px-4 py-4 text-start text-base ${&#10;                    attendance.firstIn &amp;&amp; isLateCheckIn(attendance.firstIn)&#10;                      ? 'text-red-600 font-semibold dark:text-red-400'&#10;                      : 'text-gray-500 dark:text-gray-400'&#10;                  }`}&#10;                &gt;&#10;                  &lt;span &#10;                    title={&#10;                      attendance.firstIn &amp;&amp; isLateCheckIn(attendance.firstIn)&#10;                        ? 'Vào muộn (sau 7:30)'&#10;                        : undefined&#10;                    }&#10;                  &gt;&#10;                    {attendance.firstIn ? new Date(attendance.firstIn).toLocaleTimeString(&quot;vi-VN&quot;, { &#10;                      hour: '2-digit', &#10;                      minute: '2-digit' &#10;                    }) : '-'}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell &#10;                  className={`px-4 py-4 text-start text-base ${&#10;                    attendance.lastOut &amp;&amp; isEarlyCheckOut(attendance.lastOut)&#10;                      ? 'text-red-600 font-semibold dark:text-red-400'&#10;                      : 'text-gray-500 dark:text-gray-400'&#10;                  }`}&#10;                &gt;&#10;                  &lt;span &#10;                    title={&#10;                      attendance.lastOut &amp;&amp; isEarlyCheckOut(attendance.lastOut)&#10;                        ? 'Ra sớm (trước 16:30)'&#10;                        : undefined&#10;                    }&#10;                  &gt;&#10;                    {attendance.lastOut ? new Date(attendance.lastOut).toLocaleTimeString(&quot;vi-VN&quot;, { &#10;                      hour: '2-digit', &#10;                      minute: '2-digit' &#10;                    }) : '-'}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;              &lt;/TableRow&gt;&#10;            ))}&#10;          &lt;/TableBody&gt;&#10;        &lt;/Table&gt;&#10;      &lt;/div&gt;&#10;      &#10;      {/* Pagination Controls */}&#10;      {pagination &amp;&amp; (&#10;        &lt;div className=&quot;px-6 py-4 border-t border-gray-100 dark:border-gray-800&quot;&gt;&#10;          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;            {/* Records info */}&#10;            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;              Hiển thị {(currentPage - 1) * pageSize + 1}-{Math.min(currentPage * pageSize, pagination.totalRecords)} trên {pagination.totalRecords} bản ghi&#10;            &lt;/div&gt;&#10;&#10;            {/* Pagination controls */}&#10;            &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;              {/* Previous button */}&#10;              &lt;button&#10;                onClick={() =&gt; handlePageChange(currentPage - 1)}&#10;                disabled={currentPage === 1 || loading}&#10;                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                  currentPage === 1 || loading&#10;                    ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                    : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                }`}&#10;              &gt;&#10;                Trước&#10;              &lt;/button&gt;&#10;&#10;              {/* Page numbers */}&#10;              &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) =&gt; {&#10;                  const pageNum = i + 1;&#10;                  return (&#10;                    &lt;button&#10;                      key={pageNum}&#10;                      onClick={() =&gt; handlePageChange(pageNum)}&#10;                      disabled={loading}&#10;                      className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                        pageNum === currentPage&#10;                          ? 'bg-blue-600 text-white'&#10;                          : loading&#10;                          ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                          : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                      }`}&#10;                    &gt;&#10;                      {pageNum}&#10;                    &lt;/button&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;&#10;              {/* Next button */}&#10;              &lt;button&#10;                onClick={() =&gt; handlePageChange(currentPage + 1)}&#10;                disabled={currentPage === pagination.totalPages || loading}&#10;                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                  currentPage === pagination.totalPages || loading&#10;                    ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                    : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                }`}&#10;              &gt;&#10;                Sau&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;    &lt;/div&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="import {&#10;  Table,&#10;  TableBody,&#10;  TableCell,&#10;  TableHeader,&#10;  TableRow,&#10;} from &quot;../../ui/table&quot;;&#10;&#10;import { useEffect, useState } from &quot;react&quot;;&#10;import { AttendanceDto, AttendanceApiResponse } from &quot;../../../api/dtos&quot;;&#10;import attendanceApi from &quot;../../../api/attendanceApi&quot;;&#10;&#10;// Helper functions để kiểm tra thời gian&#10;const isLateCheckIn = (timeString: string): boolean =&gt; {&#10;  if (!timeString) return false;&#10;  const time = new Date(timeString);&#10;  const hours = time.getHours();&#10;  const minutes = time.getMinutes();&#10;  // Muộn nếu sau 7:30 (7 * 60 + 30 = 450 phút)&#10;  const timeInMinutes = hours * 60 + minutes;&#10;  return timeInMinutes &gt; 450; // 7:30 = 450 phút&#10;};&#10;&#10;const isEarlyCheckOut = (timeString: string): boolean =&gt; {&#10;  if (!timeString) return false;&#10;  const time = new Date(timeString);&#10;  const hours = time.getHours();&#10;  const minutes = time.getMinutes();&#10;  // Sớm nếu trước 16:30 (16 * 60 + 30 = 990 phút)&#10;  const timeInMinutes = hours * 60 + minutes;&#10;  return timeInMinutes &lt; 990; // 16:30 = 990 phút&#10;};&#10;&#10;// Define the table data using the interface&#10;&#10;interface BasicTableOneProps {&#10;  phongBanId?: number;&#10;  // Nếu truyền 3 props dưới đây thì component sẽ gọi API theo nhân viên + khoảng thời gian&#10;  employeeNo?: string;&#10;  startTime?: string | Date;&#10;  endTime?: string | Date;&#10;}&#10;&#10;export default function BasicTableOne({ phongBanId = 1, employeeNo, startTime, endTime }: BasicTableOneProps) {&#10;  const [attendanceData, setAttendanceData] = useState&lt;AttendanceDto[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [pageSize] = useState(50);&#10;  const [pagination, setPagination] = useState&lt;{&#10;    pageIndex: number;&#10;    pageSize: number;&#10;    totalPages: number;&#10;    totalRecords: number;&#10;  } | null&gt;(null);&#10;&#10;  const handlePageChange = (page: number) =&gt; {&#10;    setCurrentPage(page);&#10;  };&#10;&#10;  // Reset về trang 1 khi thay đổi filter (phòng ban / nhân viên / thời gian)&#10;  useEffect(() =&gt; {&#10;    setCurrentPage(1);&#10;  }, [phongBanId, employeeNo, startTime, endTime]);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchData = async () =&gt; {&#10;      try {&#10;        setLoading(true);&#10;        setError(null);&#10;&#10;        const useEmployeeQuery = !!employeeNo &amp;&amp; !!startTime &amp;&amp; !!endTime;&#10;&#10;        const response = useEmployeeQuery&#10;          ? await attendanceApi.getAttendanceByEmployeeIdAndDateRange(&#10;              employeeNo as string,&#10;              startTime as string | Date,&#10;              endTime as string | Date&#10;            )&#10;          : await attendanceApi.getByPhongban(phongBanId, currentPage, pageSize);&#10;&#10;        const respData: unknown = response.data;&#10;&#10;        // Trường hợp legacy: trả về trực tiếp mảng dữ liệu&#10;        if (Array.isArray(respData)) {&#10;          setPagination(null);&#10;          setAttendanceData(respData as AttendanceDto[]);&#10;          return;&#10;        }&#10;&#10;        // Trường hợp chuẩn có phân trang&#10;        const apiResp = respData as AttendanceApiResponse;&#10;        if (apiResp &amp;&amp; apiResp.succeeded &amp;&amp; Array.isArray(apiResp.data)) {&#10;          setPagination({&#10;            pageIndex: apiResp.pageIndex,&#10;            pageSize: apiResp.pageSize,&#10;            totalPages: apiResp.totalPages,&#10;            totalRecords: apiResp.totalRecords,&#10;          });&#10;          setAttendanceData(apiResp.data);&#10;        } else {&#10;          setAttendanceData([]);&#10;          setPagination(null);&#10;          setError(apiResp?.message || &quot;Dữ liệu không đúng định dạng&quot;);&#10;        }&#10;      } catch (error) {&#10;        setError(&#10;          `Không thể tải dữ liệu chấm công: ${&#10;            error instanceof Error ? error.message : &quot;Unknown error&quot;&#10;          }`&#10;        );&#10;        setAttendanceData([]);&#10;        setPagination(null);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    // Validate when using employee filters&#10;    if (employeeNo || startTime || endTime) {&#10;      if (!employeeNo || !startTime || !endTime) {&#10;        setError(&quot;Vui lòng cung cấp đủ employeeNo, startTime và endTime&quot;);&#10;        setAttendanceData([]);&#10;        setLoading(false);&#10;        return;&#10;      }&#10;      // Additional simple validation for dates&#10;      const s = new Date(startTime as string | Date);&#10;      const e = new Date(endTime as string | Date);&#10;      if (isNaN(s.getTime()) || isNaN(e.getTime()) || s &gt; e) {&#10;        setError(&quot;Khoảng thời gian không hợp lệ&quot;);&#10;        setAttendanceData([]);&#10;        setLoading(false);&#10;        return;&#10;      }&#10;    }&#10;&#10;    fetchData();&#10;  }, [phongBanId, employeeNo, startTime, endTime, currentPage, pageSize]);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;div className=&quot;animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;Đang tải dữ liệu...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;p className=&quot;text-red-500&quot;&gt;{error}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (attendanceData.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;        &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;          &lt;p className=&quot;text-gray-500&quot;&gt;Không có dữ liệu chấm công&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]&quot;&gt;&#10;      &lt;div className=&quot;max-w-full overflow-x-auto&quot;&gt;&#10;        &lt;Table&gt;&#10;          {/* Table Header */}&#10;          &lt;TableHeader className=&quot;border-b border-gray-100 dark:border-white/[0.05]&quot;&gt;&#10;            &lt;TableRow&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-center text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                STT&#10;              &lt;/TableCell&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Mã nhân viên&#10;              &lt;/TableCell&gt;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Họ và Tên&#10;              &lt;/TableCell&gt;&#10;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Giờ vào&#10;              &lt;/TableCell&gt;&#10;&#10;              &lt;TableCell&#10;                isHeader&#10;                className=&quot;px-5 py-4 font-semibold text-gray-500 text-start text-base dark:text-gray-400&quot;&#10;              &gt;&#10;                Giờ ra&#10;              &lt;/TableCell&gt;&#10;            &lt;/TableRow&gt;&#10;          &lt;/TableHeader&gt;&#10;&#10;          {/* Table Body */}&#10;          &lt;TableBody className=&quot;divide-y divide-gray-100 dark:divide-white/[0.05]&quot;&gt;&#10;            {attendanceData.map((attendance, index) =&gt; (&#10;              &lt;TableRow key={`${attendance.manv}-${index}`}&gt;&#10;                &lt;TableCell&gt;&#10;                  &lt;span className=&quot;px-4 py-4 text-gray-500 text-center text-base dark:text-gray-400 font-medium&quot;&gt;&#10;                    {index + 1}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell&gt;&#10;                  &lt;span className=&quot;px-4 py-4 text-gray-500 text-start text-base dark:text-gray-400&quot;&gt;&#10;                    {attendance.manv}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell className=&quot;px-4 py-4 text-gray-500 text-start text-base dark:text-gray-400&quot;&gt;&#10;                  {attendance.name}&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell &#10;                  className={`px-4 py-4 text-start text-base ${&#10;                    attendance.firstIn &amp;&amp; isLateCheckIn(attendance.firstIn)&#10;                      ? 'text-red-600 font-semibold dark:text-red-400'&#10;                      : 'text-gray-500 dark:text-gray-400'&#10;                  }`}&#10;                &gt;&#10;                  &lt;span &#10;                    title={&#10;                      attendance.firstIn &amp;&amp; isLateCheckIn(attendance.firstIn)&#10;                        ? 'Vào muộn (sau 7:30)'&#10;                        : undefined&#10;                    }&#10;                  &gt;&#10;                    {attendance.firstIn ? new Date(attendance.firstIn).toLocaleTimeString(&quot;vi-VN&quot;, { &#10;                      hour: '2-digit', &#10;                      minute: '2-digit' &#10;                    }) : '-'}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;&#10;                &lt;TableCell &#10;                  className={`px-4 py-4 text-start text-base ${&#10;                    attendance.lastOut &amp;&amp; isEarlyCheckOut(attendance.lastOut)&#10;                      ? 'text-red-600 font-semibold dark:text-red-400'&#10;                      : 'text-gray-500 dark:text-gray-400'&#10;                  }`}&#10;                &gt;&#10;                  &lt;span &#10;                    title={&#10;                      attendance.lastOut &amp;&amp; isEarlyCheckOut(attendance.lastOut)&#10;                        ? 'Ra sớm (trước 16:30)'&#10;                        : undefined&#10;                    }&#10;                  &gt;&#10;                    {attendance.lastOut ? new Date(attendance.lastOut).toLocaleTimeString(&quot;vi-VN&quot;, { &#10;                      hour: '2-digit', &#10;                      minute: '2-digit' &#10;                    }) : '-'}&#10;                  &lt;/span&gt;&#10;                &lt;/TableCell&gt;&#10;              &lt;/TableRow&gt;&#10;            ))}&#10;          &lt;/TableBody&gt;&#10;        &lt;/Table&gt;&#10;      &lt;/div&gt;&#10;      &#10;      {/* Pagination Controls */}&#10;      {pagination &amp;&amp; (&#10;        &lt;div className=&quot;px-6 py-4 border-t border-gray-100 dark:border-gray-800&quot;&gt;&#10;          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;            {/* Records info */}&#10;            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;              Hiển thị {(currentPage - 1) * pageSize + 1}-{Math.min(currentPage * pageSize, pagination.totalRecords)} trên {pagination.totalRecords} bản ghi&#10;            &lt;/div&gt;&#10;&#10;            {/* Pagination controls */}&#10;            &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;              {/* Previous button */}&#10;              &lt;button&#10;                onClick={() =&gt; handlePageChange(currentPage - 1)}&#10;                disabled={currentPage === 1 || loading}&#10;                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                  currentPage === 1 || loading&#10;                    ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                    : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                }`}&#10;              &gt;&#10;                Trước&#10;              &lt;/button&gt;&#10;&#10;              {/* Page numbers */}&#10;              &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) =&gt; {&#10;                  const pageNum = i + 1;&#10;                  return (&#10;                    &lt;button&#10;                      key={pageNum}&#10;                      onClick={() =&gt; handlePageChange(pageNum)}&#10;                      disabled={loading}&#10;                      className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                        pageNum === currentPage&#10;                          ? 'bg-blue-600 text-white'&#10;                          : loading&#10;                          ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                          : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                      }`}&#10;                    &gt;&#10;                      {pageNum}&#10;                    &lt;/button&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;&#10;              {/* Next button */}&#10;              &lt;button&#10;                onClick={() =&gt; handlePageChange(currentPage + 1)}&#10;                disabled={currentPage === pagination.totalPages || loading}&#10;                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${&#10;                  currentPage === pagination.totalPages || loading&#10;                    ? 'text-gray-400 cursor-not-allowed dark:text-gray-600'&#10;                    : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-blue-900/20'&#10;                }`}&#10;              &gt;&#10;                Sau&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>